services:
  client:
    build:
      context: ./interfata
      dockerfile: Dockerfile
    develop:
      watch:
        - path: ./interfata
          target: /app
          action: rebuild
    
    volumes:
      - ./interfata:/usr/share/nginx/html
    ports:
      - "80:80"
    networks:
      - mynetwork


  app:
    build:
      context: ./ChessOppenings
      dockerfile: Dockerfile
    develop:
      watch:
        - path: ./ChessOppenings
          target: /app
          action: rebuild
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/Licenta
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    networks:
      - mynetwork

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: Licenta
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: C:/Program Files/PostgreSQL/15/data/base/41685
      o: bind

networks:
  mynetwork: